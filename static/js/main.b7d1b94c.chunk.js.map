{"version":3,"sources":["redux/actions.js","components/Navbar.jsx","components/SearchBar.jsx","components/Chats.jsx","components/AddUser.jsx","components/Sidebar.jsx","components/Input.jsx","components/Message.jsx","components/Messages.jsx","components/Chat.jsx","Pages/Home.jsx","App.js","redux/reducers.js","data.js","redux/store.js","index.js"],"names":["addMessage","message","dispatch","type","payload","Navbar","useDispatch","_jsxs","className","children","_jsx","src","alt","onClick","SearchBar","props","placeholder","onChange","event","handleSearch","target","value","Chats","users","map","user","index","Link","to","concat","id","style","textDecoration","avatar","name","messages","length","at","AddUser","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","profileUrl","setProfileUrl","handleAddUser","connect","allUsers","useSelector","state","searchTerm","setSearchTerm","setUsers","_useState5","_useState6","showAddUser","setShowAddUser","Searchbar","search","filteredUsers","filter","toLowerCase","includes","newUser","newUsers","_toConsumableArray","toast","success","position","POSITION","TOP_RIGHT","autoClose","_Fragment","Input","inputValue","setInputValue","handleInput","Message","owner","Messages","allMessages","useParams","parseInt","mess","result","newMessages","push","Home","Router","Sidebar","Routes","Route","path","element","Chat","App","ToastContainer","initialState","persistConfig","key","storage","persistedReducer","persistReducer","arguments","undefined","action","_objectSpread","store","configureStore","reducer","middleware","thunk","persistor","persistStore","ReactDOM","createRoot","document","getElementById","render","Provider","PersistGate","loading"],"mappings":"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","file":"static/js/main.b7d1b94c.chunk.js","sourcesContent":["// to add new user or to add new message\r\nexport const addMessage = (message) => {\r\n    return (dispatch) => {\r\n      dispatch({ type: \"ADD_MESSAGE\", payload: message });\r\n    };\r\n  };\r\nexport const reset = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: \"RESET\" });\r\n      };\r\n    // Also the custom logic like for the rest of the logout handler\r\n};","import React from 'react'\r\nimport { useDispatch} from 'react-redux'\r\nimport { reset } from '../redux/actions'\r\n// shown above sidebar\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"navbar\">\r\n       <span className=\"logo\">React-Chat</span>\r\n       {/* current dummy user */}\r\n       <div className=\"user\">\r\n        <img src=\"https://images.pexels.com/photos/2023384/pexels-photo-2023384.jpeg\" alt=\"\"/>\r\n        <span>Joey</span>\r\n        {/* to reset to original state in the redux state */}\r\n        <button onClick={()=>{\r\n          dispatch(reset())\r\n          }}>Clear</button>\r\n       </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\n// searchBar for searching users, shown in Sidebar component\r\nconst SearchBar = (props) => {\r\n  return (\r\n    <div className=\"searchBar\">\r\n      <div className=\"searchForm\">\r\n        <input type=\"text\" placeholder='Find a User' onChange={(event)=>props.handleSearch(event.target.value)}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// this is shown in sidebar\r\nconst Chats = (props) => {\r\n  return (\r\n    <div className='chats'>\r\n      {/* iterate over users list sent from Sidebar component and show them */}\r\n      {props.users.map((user,index) => {\r\n        return (\r\n          // when link is clicked it will open up the Chat component of that particular user\r\n          <Link to={`chat/${user.id}`} style={{ textDecoration: 'none' }} key={index}>\r\n          <div className='userChat'>\r\n            <img\r\n              src={user.avatar}\r\n              alt=''\r\n            />\r\n            <div className='userChatInfo'>\r\n              <span>{user.name}</span>\r\n              <p>{user.messages.length>0 ? user.messages.at(-1).message : \"\"}</p>\r\n            </div>\r\n          </div>\r\n          </Link>\r\n        );\r\n      })}\r\n      {/* <div className=\"userChat\">\r\n        <img src=\"https://images.pexels.com/photos/1458916/pexels-photo-1458916.jpeg?auto=compress&cs=tinysrgb&w=600\" alt=\"\"/>\r\n        <div className=\"userChatInfo\">\r\n          <span>Rachel</span>\r\n          <p>Hey</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"userChat\">\r\n        <img src=\"https://images.pexels.com/photos/1458916/pexels-photo-1458916.jpeg?auto=compress&cs=tinysrgb&w=600\" alt=\"\"/>\r\n        <div className=\"userChatInfo\">\r\n          <span>Ross</span>\r\n          <p>Hey</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"userChat\">\r\n        <img src=\"https://images.pexels.com/photos/1458916/pexels-photo-1458916.jpeg?auto=compress&cs=tinysrgb&w=600\" alt=\"\"/>\r\n        <div className=\"userChatInfo\">\r\n          <span>Moira</span>\r\n          <p>Hey</p>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chats;\r\n","import React, { useState } from 'react'\r\n\r\n// to add user by name and profile url\r\nconst AddUser = (props) => {\r\n    const [name,setName]=useState('');\r\n    const [profileUrl,setProfileUrl]=useState('');\r\n  return (\r\n    <div className=\"AddUser\">\r\n       <input type=\"text\" placeholder=\"Add name of user\" onChange={(event)=>setName(event.target.value)}/>\r\n       <input type=\"text\" placeholder=\"Add profile image url\" onChange={(event)=>setProfileUrl(event.target.value)}/>\r\n       <button onClick={()=>props.handleAddUser(name,profileUrl)}>Submit</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddUser","import React, { useState } from 'react'\r\nimport Navbar from './Navbar'\r\nimport Searchbar from './SearchBar'\r\nimport Chats from './Chats'\r\nimport AddUser from './AddUser'\r\nimport { useDispatch,connect, useSelector } from \"react-redux\";\r\nimport { addMessage } from '../redux/actions'\r\nimport { toast } from 'react-toastify';\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch(); //to dispatch action to redux\r\n  const allUsers = useSelector(state => state.messages); // getting all the users and their messages from redux store\r\n  const [searchTerm,setSearchTerm]=useState(''); //user that is being searched in SearchBar component\r\n  const [users,setUsers]=useState(allUsers);  //set users to allUsers\r\n  const [showAddUser,setShowAddUser] = useState(false); //to show add user component\r\n  \r\n  // when a user is being searched in SearchBar component\r\n  const handleSearch=(search)=>{\r\n    // if input is empty then show all the users available\r\n    if(search===''){\r\n      setUsers(allUsers);\r\n      return;\r\n     }\r\n    //  else show the users which are being searched for\r\n     setSearchTerm(search);\r\n     const filteredUsers = users.filter(user=>user.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n     setUsers(filteredUsers);\r\n  }\r\n\r\n  // when a user is added in the AddUser component\r\n  const handleAddUser = (name,profileUrl) =>{\r\n     const newUser={\r\n      \"id\":`${allUsers.length+2}`,\r\n      \"name\":`${name}`,\r\n      \"avatar\":`${profileUrl}`,\r\n      \"messages\":[]\r\n     }\r\n     let newUsers=[...allUsers,newUser];\r\n    //  dispatch action to redux\r\n     dispatch(addMessage(newUsers));\r\n     setUsers(newUsers);\r\n    // do not show the addUser component\r\n     setShowAddUser(false);\r\n    //  show notification\r\n    toast.success('User added !', {\r\n      position: toast.POSITION.TOP_RIGHT,\r\n      autoClose:1000\r\n     });\r\n  }\r\n\r\n  return (\r\n    <div className='sidebar'>\r\n      <Navbar />\r\n      <Searchbar handleSearch={handleSearch}/>\r\n      <button className=\"addUser\" onClick={()=>setShowAddUser(true)}>Add user</button>\r\n      {showAddUser ? <AddUser handleAddUser={handleAddUser}/> :<></>}\r\n      <Chats users={users}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n// export default Sidebar\r\nexport default connect(\r\n  null,\r\n)(Sidebar);","import React,{useState} from 'react'\r\n// input for entering messages by user\r\nconst Input = (props) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  return (\r\n    <div className='input'>\r\n      <input type=\"text\" value={inputValue} placeholder=\"Type something..\" onChange={(event)=>setInputValue(event.target.value)}/>\r\n      <div className=\"send\">\r\n        <button onClick={()=>{\r\n          props.handleInput(inputValue);\r\n          setInputValue('');\r\n          }}>Send</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\n// individual messages\r\nconst Message = (props) => {\r\n  // this owner variable is there to determine from which user message is sent, if user id is 1 then messages will be shown in right side,\r\n  // if id is not 1 then messages will be shown in left side as they are sent by someone else\r\n  let owner=\"owner\";\r\n  if(props.message.id!==\"1\"){\r\n    owner=\"\";\r\n  }\r\n  return (\r\n    <div className={`message ${owner}`}>\r\n       <div className=\"messageInfo\">\r\n         <img src={props.message.avatar} alt=\"\" />\r\n       </div>\r\n       <div className=\"messageContent\">\r\n           <p>{props.message.message}</p>\r\n       </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport Message from './Message'\r\n// here all the individual messages are shown in one component\r\nconst Messages = (props) => {\r\n  return (\r\n    <div className=\"messages\">\r\n      {/* iterating through all the messages*/}\r\n        {props.messages.map((message,index) =>{\r\n          return <Message message={message} key={index}/>\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Messages","import React from 'react'\r\nimport Input from './Input'\r\nimport Messages from './Messages'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useDispatch,connect, useSelector  } from \"react-redux\";\r\nimport { addMessage } from '../redux/actions'\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Chat = () => {\r\n  const allMessages = useSelector(state => state.messages); //to get the  state with all the messages from redux store\r\n  const {id}=useParams();  //get id of which particualr user's chat we have to open from param\r\n  const user=allMessages[parseInt(id)-2];  //get the user by id\r\n  const dispatch = useDispatch();\r\n  const handleInput=(mess)=>{\r\n    // add the message that user has sent to the allMessages state in redux\r\n     const result={\r\n      \"id\":\"1\",\r\n      \"message\":`${mess}`,\r\n      \"avatar\":\"https://images.pexels.com/photos/2023384/pexels-photo-2023384.jpeg\"\r\n     };\r\n     let newMessages=[...allMessages];\r\n     newMessages[parseInt(id)-2].messages.push(result);\r\n    dispatch(addMessage(newMessages));\r\n\r\n    // show notification that message is sent\r\n    toast.success('Message sent !', {\r\n      position: toast.POSITION.TOP_RIGHT,\r\n      autoClose:1000\r\n     });\r\n  }\r\n  return (\r\n    <div className='chat'>\r\n      {/* top bar of chat */}\r\n      {/* if user is present then show its name and messages */}\r\n      {user!==null ? <>\r\n       <div className=\"chatInfo\">\r\n         <span>{user.name}</span>\r\n      </div>\r\n      {/* to show messages */}\r\n       <Messages messages={user.messages}/>\r\n       {/* input where user can send messages */}\r\n      <Input handleInput={handleInput}/>\r\n      </>\r\n      : <> </> \r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n// export default Chat\r\nexport default connect(\r\n  null,\r\n  { addMessage}\r\n)(Chat);","import React from 'react'\r\nimport {Routes, Route, BrowserRouter  as Router} from 'react-router-dom';\r\nimport Sidebar from '../components/Sidebar'\r\nimport Chat from '../components/Chat'\r\nconst Home = () => {\r\n  return (\r\n    <div className='home'>\r\n        <div className='container'>\r\n          <Router>\r\n            {/* to display users */}\r\n            <Sidebar/>\r\n            {/* to display chat with particular user */}\r\n            <Routes>\r\n              {/* sending id so that we will know which data to access */}\r\n              <Route path=\"/chat/:id\" element={<Chat/>}/>\r\n            </Routes>\r\n          </Router>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","import React from 'react';\nimport './style.scss';\nimport Home from './Pages/Home';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Home/>\n     {/* to show notifications */}\n     <ToastContainer/> \n    </div>\n  );\n}\n\nexport default App;\n","// get dummy json data from data.js\r\nimport {data} from '../data'\r\n\r\n// set intial state of messages to that\r\nconst initialState = {\r\n    messages: data,\r\n  };\r\n  \r\n  export const messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      // to add new message or user\r\n      case \"ADD_MESSAGE\":\r\n        return {\r\n          ...state,\r\n          messages:  action.payload,\r\n        };\r\n        // to reset the redux store to its initial state\r\n        case \"RESET\":\r\n        return initialState;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","// dummy json data to load initial conversation\r\n// id 1 is  id of current dummy user\r\nexport const data=[\r\n    {\r\n        \"id\":\"2\",\r\n        \"name\":\"Rachel\",\r\n        \"avatar\":\"https://images.pexels.com/photos/1458916/pexels-photo-1458916.jpeg?auto=compress&cs=tinysrgb&w=600\",\r\n        \"messages\":[\r\n            {\r\n                \"id\":\"2\",\r\n                \"message\":\"Hey! Coffee today?\",\r\n                \"avatar\":\"https://images.pexels.com/photos/1458916/pexels-photo-1458916.jpeg?auto=compress&cs=tinysrgb&w=600\"\r\n            },\r\n            {\r\n                \"id\":\"1\",\r\n                \"message\":\"Yeah sure\",\r\n                \"avatar\":\"https://images.pexels.com/photos/2023384/pexels-photo-2023384.jpeg\"\r\n            },\r\n            {\r\n                \"id\":\"2\",\r\n                \"message\":\"Okay meet me at 2:30\",\r\n                \"avatar\":\"https://images.pexels.com/photos/1458916/pexels-photo-1458916.jpeg?auto=compress&cs=tinysrgb&w=600\"\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        \"id\":\"3\",\r\n        \"name\":\"Ross\",\r\n        \"avatar\":\"https://images.pexels.com/photos/406014/pexels-photo-406014.jpeg?auto=compress&cs=tinysrgb&w=600\",\r\n        \"messages\":[\r\n            {\r\n                \"id\":\"3\",\r\n                \"message\":\"Wanna go to the museum?\",\r\n                \"avatar\":\"https://images.pexels.com/photos/406014/pexels-photo-406014.jpeg?auto=compress&cs=tinysrgb&w=600\"\r\n            },\r\n            {\r\n                \"id\":\"1\",\r\n                \"message\":\"That's boring!\",\r\n                \"avatar\":\"https://images.pexels.com/photos/2023384/pexels-photo-2023384.jpeg\"\r\n            },\r\n            {\r\n                \"id\":\"3\",\r\n                \"message\":\"You are boring\",\r\n                \"avatar\":\"https://images.pexels.com/photos/406014/pexels-photo-406014.jpeg?auto=compress&cs=tinysrgb&w=600\"\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        \"id\":\"4\",\r\n        \"name\":\"Monica\",\r\n        \"avatar\":\"https://images.pexels.com/photos/257540/pexels-photo-257540.jpeg?auto=compress&cs=tinysrgb&w=600\",\r\n        \"messages\":[\r\n            {\r\n                \"id\":\"4\",\r\n                \"message\":\"Can u call Chandler?\",\r\n                \"avatar\":\"https://images.pexels.com/photos/257540/pexels-photo-257540.jpeg?auto=compress&cs=tinysrgb&w=600\"\r\n            },\r\n            {\r\n                \"id\":\"4\",\r\n                \"message\":\"He is not picking up\",\r\n                \"avatar\":\"https://images.pexels.com/photos/257540/pexels-photo-257540.jpeg?auto=compress&cs=tinysrgb&w=600\"\r\n            },\r\n            {\r\n                \"id\":\"1\",\r\n                \"message\":\"Sure!\",\r\n                \"avatar\":\"https://images.pexels.com/photos/2023384/pexels-photo-2023384.jpeg\"\r\n            },\r\n            \r\n        ]\r\n    },\r\n\r\n];\r\n\r\n","// src/redux/store.js\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport thunk from \"redux-thunk\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport { messagesReducer } from \"./reducers\";\r\n\r\n// to show the changes even after refreshing the page, redux-persist is used\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, messagesReducer);\r\n\r\nexport const store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: [thunk]\r\n  })\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport  {store, persistor } from \"./redux/store\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>\n  \n);\n\n\n"],"sourceRoot":""}